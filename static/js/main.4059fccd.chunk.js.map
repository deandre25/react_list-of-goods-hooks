{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","None","sortedGoods","setSortedGoods","isReversed","setIsReversed","sorted","goods","copyGoods","Alphabetic","sort","a","b","localeCompare","Length","length","reverse","getSortedGoods","isResetBtnVisible","handleSort","sortType","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,2BAAAA,I,mBAAAA,I,gBAAAA,M,KAgCE,IAAME,EAAgB,WAC3B,MAAsCC,mBAASH,EAASI,MAAxD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAoCH,oBAAS,GAA7C,mBAAOI,EAAP,KAAmBC,EAAnB,KACMC,EAxBR,SACEC,EADF,GAGG,IADCL,EACF,EADEA,YAAaE,EACf,EADeA,WAETI,EAAS,YAAOD,GActB,OAZIL,IAAgBL,EAASY,YAC3BD,EAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAGvCV,IAAgBL,EAASiB,QAC3BN,EAAUE,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,OAASH,EAAEG,UAGpCX,GACFI,EAAUQ,UAGLR,EAMQS,CACbnB,EACA,CAAEI,cAAaE,eAQXc,EAAoBhB,IAAgBL,EAASI,MAAQG,EAErDe,EAAa,SAACC,GAAD,OAAwBjB,EAAeiB,IAI1D,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYrB,IAAgBL,EAASY,aAEzCe,QAAS,kBAAML,EAAWtB,EAASY,aAPrC,iCAYA,wBACEa,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYrB,IAAgBL,EAASiB,SAEzCU,QAAS,kBAAML,EAAWtB,EAASiB,SAPrC,4BAYA,wBACEQ,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAAanB,IAEjBoB,QApCe,kBAAMnB,GAAeD,IA6BtC,qBAYCc,GACC,wBACEI,KAAK,SACLD,UAAU,4BACVG,QAtDU,WAClBrB,EAAeN,EAASI,MACxBI,GAAc,IAiDR,sBAUJ,6BACGC,EAAOmB,KAAI,SAAAC,GAAI,OACd,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCxHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.4059fccd.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  Alphabetic,\n  Length,\n  None,\n}\n\ntype Options = {\n  sortedGoods: SortType,\n  isReversed: boolean\n};\n\nfunction getSortedGoods(\n  goods: string[],\n  { sortedGoods, isReversed }: Options,\n) {\n  const copyGoods = [...goods];\n\n  if (sortedGoods === SortType.Alphabetic) {\n    copyGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (sortedGoods === SortType.Length) {\n    copyGoods.sort((a, b) => a.length - b.length);\n  }\n\n  if (isReversed) {\n    copyGoods.reverse();\n  }\n\n  return copyGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortedGoods, setSortedGoods] = useState(SortType.None);\n  const [isReversed, setIsReversed] = useState(false);\n  const sorted = getSortedGoods(\n    goodsFromServer,\n    { sortedGoods, isReversed },\n  );\n\n  const handleReset = () => {\n    setSortedGoods(SortType.None);\n    setIsReversed(false);\n  };\n\n  const isResetBtnVisible = sortedGoods !== SortType.None || isReversed;\n\n  const handleSort = (sortType: SortType) => setSortedGoods(sortType);\n\n  const handleReversed = () => setIsReversed(!isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortedGoods !== SortType.Alphabetic },\n          )}\n          onClick={() => handleSort(SortType.Alphabetic)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortedGoods !== SortType.Length },\n          )}\n          onClick={() => handleSort(SortType.Length)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n          onClick={handleReversed}\n        >\n          Reverse\n        </button>\n\n        {isResetBtnVisible && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={handleReset}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sorted.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}